# -*- coding: utf-8 -*-
# Generated by Django 1.11.12 on 2018-06-23 20:41
from __future__ import unicode_literals

import accounts.managers
import accounts.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=30, verbose_name='Name')),
                ('status', models.CharField(choices=[('student', 'Student'), ('alumnus', 'Alumnus/Alumna'), ('faculty', 'Faculty'), ('staff', 'Staff')], default='student', max_length=10, verbose_name='Status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('member_since', models.DateTimeField(auto_now_add=True, verbose_name='Member Since')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', accounts.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, null=True, upload_to=accounts.models.get_picture_filename, verbose_name='Upload a picture')),
                ('concentration', models.CharField(blank=True, max_length=100, verbose_name='Concentration')),
                ('relationship_status', models.CharField(blank=True, choices=[('empty', ''), ('single', 'Single'), ('relationship', 'In a Relationship'), ('engaged', 'Engaged'), ('married', 'Married'), ('complicated', "It's Complicated")], default='empty', max_length=20, verbose_name='Relationship Status')),
                ('sex', models.CharField(blank=True, choices=[('empty', ''), ('male', 'Male'), ('female', 'Female'), ('other', 'Other')], default='empty', max_length=20, verbose_name='Sex')),
                ('dob', models.DateField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=100, verbose_name='Concentration')),
                ('high_school', models.CharField(blank=True, max_length=100, verbose_name='High School')),
                ('screen_name', models.CharField(blank=True, max_length=100, verbose_name='Screen Name')),
                ('political_views', models.TextField(blank=True, max_length=1000, verbose_name='Political Views')),
                ('interests', models.CharField(blank=True, max_length=256, verbose_name='Interests')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('friend', models.ManyToManyField(blank=True, related_name='friends', to=settings.AUTH_USER_MODEL)),
                ('pending_request', models.ManyToManyField(blank=True, related_name='pending_requests', to=settings.AUTH_USER_MODEL)),
                ('poke', models.ManyToManyField(blank=True, related_name='pokes', to=settings.AUTH_USER_MODEL)),
                ('sent_request', models.ManyToManyField(blank=True, related_name='sent_requests', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
                'ordering': ('-created',),
            },
        ),
    ]
